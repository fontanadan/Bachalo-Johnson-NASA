/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     	rhoCentralFoam; //rhoEnergyFoam;

startFrom       	latestTime;

startTime       	0;

stopAt          	endTime;

endTime         	0.1;

deltaT          	0.0000005;

writeControl    	runTime;

writeInterval   	0.0001;

purgeWrite      	0;

writeFormat     	ascii;

writePrecision  	9;

writeCompression	off;

timeFormat      	general;

timePrecision   	6;

runTimeModifiable 	true;

adjustTimeStep  	no;

maxCo           	0.1;

maxDeltaT       	1e-06;

pressArtDiff		true; //activate artificial diffusion on pressure 
convArtDiff		true; //activate artificial diffusion on convective terms

ducLevelPress		0.00;
ducLevelConv		0.05;
epsilon			423405;
kp			0.25;
ku			0.75;
rm			0.875;
mInfty			0.765;

functions
{	
	writeduc
	{ 	
		type	 		writeObjects;
		libs			( "libutilityFunctionObjects.so" );
		objects			( "ducSensor" );
		writeControl		outputTime;
		writeInterval		1;
	}
/*
	pressure
	{	
		type			pressure;
		libs			( fieldFunctionObjects );
		writeControl		writeTime;
		result			Cp;
		mode			staticCoeff;
		rho			rhoInf;
		rhoInf			0.858;
		U			UInf;
		UInf			(291.0 0 0);
		pInf			68000;
		patches			(bump);
	}

	forceCoeffs
        {
                type            	forceCoeffs;
                libs            	( forces );
                writeControl    	writeTime;
                rho             	rhoInf;
                rhoInf          	0.858;
		liftDir			(0 1 0);
		dragDir			(1 0 0);
		CofR			(0.5 0 0);
		pitchAxis		(0 0 1);
                magUInf         	291.0;
		lRef			1;
		Aref			0.28125; // mesh span = 0.6, bump height = 0.46875
                patches         	(bump);
        }

	wallShearStress
	{	
		type			wallShearStress;
		libs			( fieldFunctionObjects );
		writeControl		writeTime;
		patches			(bump);
	}

	yPlus
	{	
		type			yPlus;
		libs            	( fieldFunctionObjects );
                writeControl    	writeTime;
                patches        		(bump);
	}

	SampleU
	{	
		type			sets;
		libs			(sampling);
		writeControl		outputTime;
		writeInterval  		1;
		interpolationScheme	cell;
		setFormat		raw;
		sets
		(	
			x02neg
		 	{	
				type		uniform;
				axis		y;
				start		(-0.2 0.0 0.0);
				end		(-0.2 0.6 0.0);
				nPoints	  	400;
				interpolate	true;
			}
		);
		fields		(U grad(U) rho T);
		}
*/
}

// ************************************************************************* //
